{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, TransitionGroup as _TransitionGroup, withCtx as _withCtx, createVNode as _createVNode, normalizeStyle as _normalizeStyle, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"test-page\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"테스트 페이지\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"banner\"\n};\nconst _hoisted_4 = [\"src\", \"alt\"];\nconst _hoisted_5 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"container\\\"><div class=\\\"triangle-container\\\"><div class=\\\"triangle rotated\\\"><div class=\\\"triangle-inner\\\" style=\\\"background:rgba(255, 0, 0, 0.3);\\\"></div><div class=\\\"arrow\\\"><div class=\\\"arrow-inner\\\"></div></div></div><div class=\\\"triangle\\\"><div class=\\\"triangle-inner\\\" style=\\\"background:#E89F71;\\\"></div><div class=\\\"arrow\\\"><div class=\\\"arrow-inner\\\"></div></div></div></div></div>\", 1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", {\n    class: \"slider\",\n    style: _normalizeStyle({\n      transform: 'translateX(-' + $data.currentIndex * 100 + '%)'\n    })\n  }, [_createVNode(_TransitionGroup, {\n    name: \"slide\",\n    tag: \"div\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.images, (image, index) => {\n      return _openBlock(), _createElementBlock(\"img\", {\n        key: index,\n        src: image,\n        alt: 'slide-' + index,\n        class: _normalizeClass([\"slide\", {\n          'active': index === $data.currentIndex\n        }])\n      }, null, 10 /* CLASS, PROPS */, _hoisted_4);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  })], 4 /* STYLE */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.prevSlide && $options.prevSlide(...args)),\n    class: \"prev-btn\"\n  }, \"이전\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.nextSlide && $options.nextSlide(...args)),\n    class: \"next-btn\"\n  }, \"다음\"), _hoisted_5])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createStaticVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","style","_normalizeStyle","transform","$data","currentIndex","_createVNode","_TransitionGroup","name","tag","default","_withCtx","_Fragment","_renderList","images","image","index","key","src","alt","_normalizeClass","_hoisted_4","_","onClick","_cache","args","$options","prevSlide","nextSlide","_hoisted_5"],"sources":["C:\\Users\\boo\\icns\\shop\\front-end\\src\\pages\\Test.vue"],"sourcesContent":["<template>\r\n    <div class=\"test-page\">\r\n        <h1>테스트 페이지</h1>\r\n        <div class=\"banner\">\r\n            <div class=\"slider\" :style=\"{ transform: 'translateX(-' + currentIndex * 100 + '%)' }\">\r\n                <transition-group name=\"slide\" tag=\"div\">\r\n                    <img :key=\"index\" v-for=\"(image, index) in images\" :src=\"image\" :alt=\"'slide-' + index\"\r\n                        class=\"slide\" :class=\"{ 'active': index === currentIndex }\">\r\n                </transition-group>\r\n            </div>\r\n            <button @click=\"prevSlide\" class=\"prev-btn\">이전</button>\r\n            <button @click=\"nextSlide\" class=\"next-btn\">다음</button>\r\n\r\n            <div class=\"container\">\r\n                <div class=\"triangle-container\">\r\n                    <div class=\"triangle rotated\">\r\n                        <div class=\"triangle-inner\" style=\"background: rgba(255, 0, 0, 0.3);\"></div>\r\n                        <div class=\"arrow\">\r\n                            <div class=\"arrow-inner\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"triangle\">\r\n                        <div class=\"triangle-inner\" style=\"background: #E89F71;\"></div>\r\n                        <div class=\"arrow\">\r\n                            <div class=\"arrow-inner\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"Test\",\r\n    data() {\r\n        return {\r\n            images: [\r\n                '/slide/slide1.jpg',\r\n                '/slide/slide2.jpg',\r\n                '/slide/slide3.jpg',\r\n                '/slide/slide4.jpg'\r\n            ],\r\n            currentIndex: 0\r\n        };\r\n    },\r\n    methods: {\r\n        prevSlide() {\r\n            this.currentIndex = (this.currentIndex - 1 + this.images.length) % this.images.length;\r\n            console.log(this.currentIndex);\r\n        },\r\n        nextSlide() {\r\n            this.currentIndex = (this.currentIndex + 1) % this.images.length;\r\n            console.log(this.currentIndex);\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style>\r\n.container {\r\n    width: 104px;\r\n    height: 48px;\r\n    position: relative;\r\n}\r\n\r\n.triangle-container {\r\n    position: relative;\r\n}\r\n\r\n.triangle {\r\n    width: 48px;\r\n    height: 48px;\r\n    position: absolute;\r\n}\r\n\r\n.rotated {\r\n    transform: rotate(180deg);\r\n    left: 48px;\r\n}\r\n\r\n.triangle-inner {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 9999px;\r\n}\r\n\r\n.arrow {\r\n    width: 24px;\r\n    height: 24px;\r\n    position: absolute;\r\n    display: inline-flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 5px 8px;\r\n}\r\n\r\n.arrow-inner {\r\n    width: 7px;\r\n    height: 14px;\r\n    border: 1.8px solid white;\r\n}\r\n\r\n\r\n\r\n\r\n.banner {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 300px;\r\n    /* 이미지 높이에 맞게 조절하세요 */\r\n}\r\n\r\n.slider {\r\n    display: flex;\r\n    transition: transform 0.5s ease;\r\n    /* 슬라이드 효과를 위한 트랜지션 설정 */\r\n}\r\n\r\n.slide {\r\n    flex: 0 0 100%;\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    /* 이미지가 적절하게 화면에 맞게 조절되도록 */\r\n}\r\n\r\n.prev-btn,\r\n.next-btn {\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    padding: 10px;\r\n    border: none;\r\n    background-color: transparent;\r\n    color: white;\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n}\r\n\r\n.prev-btn {\r\n    left: 10px;\r\n}\r\n\r\n.next-btn {\r\n    right: 10px;\r\n}\r\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAW;gCAClBC,mBAAA,CAAgB,YAAZ,SAAO;;EACND,KAAK,EAAC;AAAQ;mBAH3B;gCAAAE,kBAAA;;uBACIC,mBAAA,CA8BM,OA9BNC,UA8BM,GA7BFC,UAAgB,EAChBJ,mBAAA,CA2BM,OA3BNK,UA2BM,GA1BFL,mBAAA,CAKM;IALDD,KAAK,EAAC,QAAQ;IAAEO,KAAK,EAJtCC,eAAA;MAAAC,SAAA,mBAIsEC,KAAA,CAAAC,YAAY;IAAA;MAClEC,YAAA,CAGmBC,gBAAA;IAHDC,IAAI,EAAC,OAAO;IAACC,GAAG,EAAC;;IALnDC,OAAA,EAAAC,QAAA,CAMsC,MAAgC,E,kBAAlDd,mBAAA,CACgEe,SAAA,QAPpFC,WAAA,CAM+DT,KAAA,CAAAU,MAAM,EANrE,CAM8CC,KAAK,EAAEC,KAAK;2BAAtCnB,mBAAA,CACgE;QAD1DoB,GAAG,EAAED,KAAK;QAAoCE,GAAG,EAAEH,KAAK;QAAGI,GAAG,aAAaH,KAAK;QAClFtB,KAAK,EAP7B0B,eAAA,EAO8B,OAAO;UAAA,UAAqBJ,KAAK,KAAKZ,KAAA,CAAAC;QAAY;sCAPhFgB,UAAA;;IAAAC,CAAA;uBAUY3B,mBAAA,CAAuD;IAA9C4B,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;IAAE/B,KAAK,EAAC;KAAW,IAAE,GAC9CC,mBAAA,CAAuD;IAA9C4B,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAE,SAAA,IAAAF,QAAA,CAAAE,SAAA,IAAAH,IAAA,CAAS;IAAE/B,KAAK,EAAC;KAAW,IAAE,GAE9CmC,UAeM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}