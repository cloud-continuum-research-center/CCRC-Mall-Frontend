{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from \"@/scripts/router\";\nimport { categories } from \"@/scripts/categories\";\nimport { ref, onMounted } from \"vue\";\nexport default {\n  name: \"SimilarCustomCard\",\n  props: {\n    item: Object\n  },\n  setup(props) {\n    const itemImg = ref(null);\n    const goToProductDetail = () => {\n      router.push({\n        name: 'ProductDetail',\n        params: {\n          id: props.item.id\n        }\n      });\n    };\n    const getCategoryName = categoryId => {\n      const category = categories.find(cat => cat.id === categoryId);\n      return category ? category.name : \"Unknown Category\";\n    };\n    onMounted(() => {\n      const imgSrc = `/api/items/${props.item.id}/image`;\n      itemImg.value = imgSrc;\n    });\n    const beforeRouteUpdate = (to, from, next) => {\n      // 현재 상품 ID와 이전 상품 ID가 다른 경우에만 데이터를 다시 가져오도록 합니다.\n      if (to.params.id !== from.params.id) {\n        const imgSrc = `/api/items/${to.params.id}/image`;\n        itemImg.value = imgSrc;\n      }\n      next(); // 반드시 호출해야 다음 훅으로 이동합니다.\n    };\n    return {\n      goToProductDetail,\n      getCategoryName,\n      itemImg,\n      beforeRouteUpdate\n    };\n  },\n  beforeRouteUpdate(to, from, next) {\n    this.beforeRouteUpdate(to, from, next);\n  }\n};","map":{"version":3,"names":["router","categories","ref","onMounted","name","props","item","Object","setup","itemImg","goToProductDetail","push","params","id","getCategoryName","categoryId","category","find","cat","imgSrc","value","beforeRouteUpdate","to","from","next"],"sources":["C:\\Users\\boo\\icns\\shop\\front-end\\src\\components\\SimilarCard.vue"],"sourcesContent":["<template>\r\n  <div class=\"similar-custom-card\" @click=\"goToProductDetail\">\r\n\r\n\r\n    <div class=\"image-container\">\r\n      <img :src=\"itemImg\" alt=\"Product Image\">\r\n    </div>\r\n\r\n    <div class=\"content-container\">\r\n      <div class=\"product-category-container\">\r\n        <p class=\"category\">{{ getCategoryName(item.category_id) }}</p>\r\n        <h5 class=\"product-name\">{{ item.name }}</h5>\r\n      </div>\r\n      <div class=\"price\">\r\n        <div class=\"discounted-price\">Rp 3.500.000</div>\r\n        <div class=\"original-price\">Rp 2.500.000</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport router from \"@/scripts/router\";\r\nimport { categories } from \"@/scripts/categories\";\r\nimport { ref, onMounted } from \"vue\";\r\n\r\n\r\nexport default {\r\n  name: \"SimilarCustomCard\",\r\n  props: {\r\n    item: Object\r\n  },\r\n  setup(props) {\r\n    const itemImg = ref(null);\r\n\r\n    const goToProductDetail = () => {\r\n      router.push({ name: 'ProductDetail', params: { id: props.item.id } });\r\n    };\r\n    const getCategoryName = (categoryId) => {\r\n      const category = categories.find(cat => cat.id === categoryId);\r\n      return category ? category.name : \"Unknown Category\";\r\n    };\r\n\r\n    onMounted(() => {\r\n      const imgSrc = `/api/items/${props.item.id}/image`;\r\n      itemImg.value = imgSrc;\r\n    });\r\n\r\n    const beforeRouteUpdate = (to, from, next) => {\r\n      // 현재 상품 ID와 이전 상품 ID가 다른 경우에만 데이터를 다시 가져오도록 합니다.\r\n      if (to.params.id !== from.params.id) {\r\n        const imgSrc = `/api/items/${to.params.id}/image`;\r\n        itemImg.value = imgSrc;\r\n      }\r\n      next(); // 반드시 호출해야 다음 훅으로 이동합니다.\r\n    };\r\n\r\n\r\n\r\n    return { goToProductDetail, getCategoryName, itemImg, beforeRouteUpdate };\r\n  },\r\n  beforeRouteUpdate(to, from, next) {\r\n    this.beforeRouteUpdate(to, from, next);\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@import '../assets/css/components/similar_card.css'\r\n</style>"],"mappings":";AAsBA,OAAOA,MAAK,MAAO,kBAAkB;AACrC,SAASC,UAAS,QAAS,sBAAsB;AACjD,SAASC,GAAG,EAAEC,SAAQ,QAAS,KAAK;AAGpC,eAAe;EACbC,IAAI,EAAE,mBAAmB;EACzBC,KAAK,EAAE;IACLC,IAAI,EAAEC;EACR,CAAC;EACDC,KAAKA,CAACH,KAAK,EAAE;IACX,MAAMI,OAAM,GAAIP,GAAG,CAAC,IAAI,CAAC;IAEzB,MAAMQ,iBAAgB,GAAIA,CAAA,KAAM;MAC9BV,MAAM,CAACW,IAAI,CAAC;QAAEP,IAAI,EAAE,eAAe;QAAEQ,MAAM,EAAE;UAAEC,EAAE,EAAER,KAAK,CAACC,IAAI,CAACO;QAAG;MAAE,CAAC,CAAC;IACvE,CAAC;IACD,MAAMC,eAAc,GAAKC,UAAU,IAAK;MACtC,MAAMC,QAAO,GAAIf,UAAU,CAACgB,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACL,EAAC,KAAME,UAAU,CAAC;MAC9D,OAAOC,QAAO,GAAIA,QAAQ,CAACZ,IAAG,GAAI,kBAAkB;IACtD,CAAC;IAEDD,SAAS,CAAC,MAAM;MACd,MAAMgB,MAAK,GAAK,cAAad,KAAK,CAACC,IAAI,CAACO,EAAG,QAAO;MAClDJ,OAAO,CAACW,KAAI,GAAID,MAAM;IACxB,CAAC,CAAC;IAEF,MAAME,iBAAgB,GAAIA,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;MAC5C;MACA,IAAIF,EAAE,CAACV,MAAM,CAACC,EAAC,KAAMU,IAAI,CAACX,MAAM,CAACC,EAAE,EAAE;QACnC,MAAMM,MAAK,GAAK,cAAaG,EAAE,CAACV,MAAM,CAACC,EAAG,QAAO;QACjDJ,OAAO,CAACW,KAAI,GAAID,MAAM;MACxB;MACAK,IAAI,CAAC,CAAC,EAAE;IACV,CAAC;IAID,OAAO;MAAEd,iBAAiB;MAAEI,eAAe;MAAEL,OAAO;MAAEY;IAAkB,CAAC;EAC3E,CAAC;EACDA,iBAAiBA,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAE;IAChC,IAAI,CAACH,iBAAiB,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,CAAC;EACxC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}