{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-23feb6ce\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"join-container\"\n};\nconst _hoisted_2 = {\n  class: \"form-group\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"Email\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"비밀번호\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"passwordConfirm\"\n}, \"비밀번호 확인\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  key: 0,\n  style: {\n    \"color\": \"red\"\n  }\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"회원가입\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"])),\n    class: \"join-form\"\n  }, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]])]), _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"passwordConfirm\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.passwordConfirm = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.passwordConfirm]]), $data.password !== $data.passwordConfirm ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, \"비밀번호가 일치하지 않습니다.\")) : _createCommentVNode(\"v-if\", true)]), _hoisted_9], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","key","style","type","_createElementBlock","_hoisted_1","onSubmit","_cache","_withModifiers","args","$options","submitForm","_hoisted_2","_hoisted_3","id","$event","$data","email","_hoisted_4","_hoisted_5","password","_hoisted_6","_hoisted_7","passwordConfirm","_hoisted_8","_createCommentVNode","_hoisted_9"],"sources":["C:\\Users\\boo\\icns\\shop\\front-end\\src\\pages\\Join.vue"],"sourcesContent":["<template>\r\n    <div class=\"join-container\">\r\n        <form @submit.prevent=\"submitForm\" class=\"join-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"email\">Email</label>\r\n                <input type=\"text\" id=\"email\" v-model=\"email\" />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">비밀번호</label>\r\n                <input type=\"password\" id=\"password\" v-model=\"password\" />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"passwordConfirm\">비밀번호 확인</label>\r\n                <input type=\"password\" id=\"passwordConfirm\" v-model=\"passwordConfirm\" />\r\n                <p v-if=\"password !== passwordConfirm\" style=\"color: red;\">비밀번호가 일치하지 않습니다.</p>\r\n            </div>\r\n            <button type=\"submit\">회원가입</button>\r\n        </form>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport axios from 'axios';\r\nimport router from \"@/scripts/router\";\r\n\r\n\r\nexport default {\r\n    name: 'Join',\r\n    data() {\r\n        return {\r\n            email: '',\r\n            password: '',\r\n            passwordConfirm: '',\r\n           };\r\n    },\r\n    methods: {\r\n        async submitForm() {\r\n            try {\r\n                if (this.password !== this.passwordConfirm) {\r\n                    console.error('비밀번호가 일치하지 않습니다.');\r\n                    window.alert(\"비밀번호가 일치하지 않습니다\");\r\n                    return;\r\n                }\r\n                const userData = {\r\n                    email: this.email,\r\n                    password: this.password,\r\n                };\r\n\r\n                const response = await axios.post('/api/join/', userData);\r\n                console.log('서버 응답:', response.data);\r\n\r\n                window.alert('회원가입이 완료되었습니다.');\r\n\r\n                const moveTo = window.confirm('로그인 화면으로 이동하시겠습니까?');\r\n                if (moveTo) {\r\n                    router.push({ name: 'Login' }); // 로그인 화면으로 이동\r\n                } else {\r\n                    router.push({ name: 'Home' }); // 메인 화면으로 이동\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error('오류 발생:', error.response.data);\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n  \r\n<style scoped>\r\n.join-container {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 100vh;\r\n}\r\n\r\n.join-form {\r\n    width: 300px;\r\n    padding: 20px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 5px;\r\n}\r\n\r\n.form-group {\r\n    margin-bottom: 15px;\r\n}\r\n\r\nlabel {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n    font-weight: bold;\r\n}\r\n\r\ninput {\r\n    width: 100%;\r\n    padding: 8px;\r\n    box-sizing: border-box;\r\n    border: 1px solid #ccc;\r\n    border-radius: 3px;\r\n}\r\n\r\nbutton {\r\n    width: 100%;\r\n    padding: 10px;\r\n    background-color: #007bff;\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 3px;\r\n    cursor: pointer;\r\n}\r\n</style>\r\n  "],"mappings":";;;EACSA,KAAK,EAAC;AAAgB;;EAEdA,KAAK,EAAC;AAAY;gEACnBC,mBAAA,CAAgC;EAAzBC,GAAG,EAAC;AAAO,GAAC,OAAK;;EAGvBF,KAAK,EAAC;AAAY;gEACnBC,mBAAA,CAAkC;EAA3BC,GAAG,EAAC;AAAU,GAAC,MAAI;;EAGzBF,KAAK,EAAC;AAAY;gEACnBC,mBAAA,CAA4C;EAArCC,GAAG,EAAC;AAAiB,GAAC,SAAO;;EAZpDC,GAAA;EAcuDC,KAAmB,EAAnB;IAAA;EAAA;;gEAE3CH,mBAAA,CAAmC;EAA3BI,IAAI,EAAC;AAAQ,GAAC,MAAI;;uBAflCC,mBAAA,CAiBM,OAjBNC,UAiBM,GAhBFN,mBAAA,CAeO;IAfAO,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAFrBC,cAAA,KAAAC,IAAA,KAE+BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IAAEX,KAAK,EAAC;MACrCC,mBAAA,CAGM,OAHNa,UAGM,GAFFC,UAAgC,E,gBAChCd,mBAAA,CAAgD;IAAzCI,IAAI,EAAC,MAAM;IAACW,EAAE,EAAC,OAAO;IAL7C,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAKuDC,KAAA,CAAAC,KAAK,GAAAF,MAAA;iDAALC,KAAA,CAAAC,KAAK,E,KAEhDlB,mBAAA,CAGM,OAHNmB,UAGM,GAFFC,UAAkC,E,gBAClCpB,mBAAA,CAA0D;IAAnDI,IAAI,EAAC,UAAU;IAACW,EAAE,EAAC,UAAU;IATpD,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAS8DC,KAAA,CAAAI,QAAQ,GAAAL,MAAA;iDAARC,KAAA,CAAAI,QAAQ,E,KAE1DrB,mBAAA,CAIM,OAJNsB,UAIM,GAHFC,UAA4C,E,gBAC5CvB,mBAAA,CAAwE;IAAjEI,IAAI,EAAC,UAAU;IAACW,EAAE,EAAC,iBAAiB;IAb3D,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAaqEC,KAAA,CAAAO,eAAe,GAAAR,MAAA;iDAAfC,KAAA,CAAAO,eAAe,E,GAC3DP,KAAA,CAAAI,QAAQ,KAAKJ,KAAA,CAAAO,eAAe,I,cAArCnB,mBAAA,CAA+E,KAA/EoB,UAA+E,EAApB,kBAAgB,KAd3FC,mBAAA,e,GAgBYC,UAAmC,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}