{"ast":null,"code":"import axios from \"axios\";\nimport { reactive, onMounted } from \"vue\";\nimport { useRoute } from 'vue-router';\nexport default {\n  name: \"ProductDetail\",\n  props: {\n    // 컴포넌트 옵션에서 기본값 설정\n    defaultStarRating: {\n      type: Number,\n      default: 5\n    }\n  },\n  setup(props) {\n    const route = useRoute();\n    const productId = route.params.id;\n    const state = reactive({\n      product: {},\n      reviews: []\n    });\n    let reviewContent = \"\";\n    let reviewStar = props.defaultStarRating;\n    const submitReview = async () => {\n      const reviewData = await prepareReviewData();\n      await sendReviewData(reviewData);\n      resetReviewForm();\n    };\n    const prepareReviewData = async () => {\n      const userId = await getUserId();\n      return {\n        content: reviewContent,\n        star: reviewStar,\n        user_id: userId,\n        item_id: productId\n      };\n    };\n    const sendReviewData = async reviewData => {\n      try {\n        await axios.post(`/api/items/${productId}/reviews/`, reviewData);\n        console.log(\"Review submitted successfully!\");\n      } catch (error) {\n        console.error(\"Error submitting review:\", error);\n      }\n    };\n    const resetReviewForm = () => {\n      reviewContent = \"\";\n      reviewStar = props.defaultStarRating;\n    };\n\n    /*const fetchReviews = () => {\r\n      axios.get(`/api/items/${productId}/reviews/`)\r\n        .then(({ data }) => {\r\n          state.reviews = data;\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error fetching reviews:\", error);       \r\n        });\r\n    };\r\n    */\n    onMounted(() => {\n      axios.get(`/api/items/${productId}`).then(({\n        data\n      }) => {\n        state.product = data;\n        //fetchReviews(); // Fetch reviews after fetching product\n      }).catch(error => {\n        console.error(\"Error fetching product:\", error);\n      });\n    });\n    return {\n      state,\n      reviewContent,\n      reviewStar,\n      submitReview\n    };\n  }\n};","map":{"version":3,"names":["axios","reactive","onMounted","useRoute","name","props","defaultStarRating","type","Number","default","setup","route","productId","params","id","state","product","reviews","reviewContent","reviewStar","submitReview","reviewData","prepareReviewData","sendReviewData","resetReviewForm","userId","getUserId","content","star","user_id","item_id","post","console","log","error","get","then","data","catch"],"sources":["C:\\Users\\boo\\icns\\shop\\front-end\\src\\pages\\ProductDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"product-detail\">\r\n    <!-- 상품 상세 정보 -->\r\n    <div v-if=\"state.product\">\r\n      <h2>{{ state.product.name }}</h2>\r\n      <p>Description: {{ state.product.description }}</p>\r\n      <p>Price: {{ state.product.price }}</p>\r\n    </div>\r\n    <div v-else>\r\n      <p>Loading...</p>\r\n    </div>\r\n\r\n    <!-- 리뷰 작성 폼 -->\r\n    <form @submit.prevent=\"submitReview\">\r\n      <textarea v-model=\"reviewContent\" placeholder=\"리뷰 작성란\"></textarea>\r\n      <select v-model=\"reviewStar\">\r\n        <option value=\"1\">1 Star</option>\r\n        <option value=\"2\">2 Stars</option>\r\n        <option value=\"3\">3 Stars</option>\r\n        <option value=\"4\">4 Stars</option>\r\n        <option value=\"5\">5 Stars</option>\r\n      </select>\r\n      <button type=\"submit\">리뷰 등록하기</button>\r\n    </form>\r\n\r\n    <!-- 기존 리뷰 표시 \r\n    <div v-if=\"state.reviews.length\">\r\n      <h3>Reviews</h3>\r\n      <div v-for=\"review in state.reviews\" :key=\"review.id\">\r\n        <p>Content: {{ review.content }}</p>\r\n        <p>Star: {{ review.star }}</p>\r\n      </div>\r\n    </div>-->\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { reactive, onMounted } from \"vue\";\r\nimport { useRoute } from 'vue-router';\r\n\r\nexport default {\r\n  name: \"ProductDetail\",\r\n\r\n  props: {\r\n    // 컴포넌트 옵션에서 기본값 설정\r\n    defaultStarRating: {\r\n      type: Number,\r\n      default: 5,\r\n    },\r\n  },\r\n\r\n\r\n  setup(props) {\r\n    const route = useRoute();\r\n    const productId = route.params.id;\r\n\r\n    const state = reactive({\r\n      product: {},\r\n      reviews: [],\r\n    });\r\n\r\n    let reviewContent = \"\";\r\n    let reviewStar = props.defaultStarRating;\r\n\r\n    const submitReview = async () => {\r\n      const reviewData = await prepareReviewData();\r\n      await sendReviewData(reviewData);\r\n      resetReviewForm();\r\n    };\r\n\r\n    const prepareReviewData = async () => {\r\n      const userId = await getUserId();\r\n      return {\r\n        content: reviewContent,\r\n        star: reviewStar,\r\n        user_id: userId,\r\n        item_id: productId,\r\n      };\r\n    };\r\n    const sendReviewData = async (reviewData) => {\r\n      try {\r\n        await axios.post(`/api/items/${productId}/reviews/`, reviewData);\r\n        console.log(\"Review submitted successfully!\");\r\n      } catch (error) {\r\n        console.error(\"Error submitting review:\", error);\r\n      }\r\n    };\r\n\r\n    const resetReviewForm = () => {\r\n      reviewContent = \"\";\r\n      reviewStar = props.defaultStarRating;\r\n    };\r\n\r\n    /*const fetchReviews = () => {\r\n      axios.get(`/api/items/${productId}/reviews/`)\r\n        .then(({ data }) => {\r\n          state.reviews = data;\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error fetching reviews:\", error);       \r\n        });\r\n    };\r\n*/\r\n    onMounted(() => {\r\n      axios.get(`/api/items/${productId}`)\r\n        .then(({ data }) => {\r\n          state.product = data;\r\n          //fetchReviews(); // Fetch reviews after fetching product\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error fetching product:\", error);       \r\n        });\r\n    });\r\n\r\n    return { state, reviewContent, reviewStar, submitReview };\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AAsCA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAQ,QAAS,KAAK;AACzC,SAASC,QAAO,QAAS,YAAY;AAErC,eAAe;EACbC,IAAI,EAAE,eAAe;EAErBC,KAAK,EAAE;IACL;IACAC,iBAAiB,EAAE;MACjBC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX;EACF,CAAC;EAGDC,KAAKA,CAACL,KAAK,EAAE;IACX,MAAMM,KAAI,GAAIR,QAAQ,CAAC,CAAC;IACxB,MAAMS,SAAQ,GAAID,KAAK,CAACE,MAAM,CAACC,EAAE;IAEjC,MAAMC,KAAI,GAAId,QAAQ,CAAC;MACrBe,OAAO,EAAE,CAAC,CAAC;MACXC,OAAO,EAAE;IACX,CAAC,CAAC;IAEF,IAAIC,aAAY,GAAI,EAAE;IACtB,IAAIC,UAAS,GAAId,KAAK,CAACC,iBAAiB;IAExC,MAAMc,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,MAAMC,UAAS,GAAI,MAAMC,iBAAiB,CAAC,CAAC;MAC5C,MAAMC,cAAc,CAACF,UAAU,CAAC;MAChCG,eAAe,CAAC,CAAC;IACnB,CAAC;IAED,MAAMF,iBAAgB,GAAI,MAAAA,CAAA,KAAY;MACpC,MAAMG,MAAK,GAAI,MAAMC,SAAS,CAAC,CAAC;MAChC,OAAO;QACLC,OAAO,EAAET,aAAa;QACtBU,IAAI,EAAET,UAAU;QAChBU,OAAO,EAAEJ,MAAM;QACfK,OAAO,EAAElB;MACX,CAAC;IACH,CAAC;IACD,MAAMW,cAAa,GAAI,MAAOF,UAAU,IAAK;MAC3C,IAAI;QACF,MAAMrB,KAAK,CAAC+B,IAAI,CAAE,cAAanB,SAAU,WAAU,EAAES,UAAU,CAAC;QAChEW,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MAC/C,EAAE,OAAOC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAED,MAAMV,eAAc,GAAIA,CAAA,KAAM;MAC5BN,aAAY,GAAI,EAAE;MAClBC,UAAS,GAAId,KAAK,CAACC,iBAAiB;IACtC,CAAC;;IAED;;;;;;;;;AASJ;IACIJ,SAAS,CAAC,MAAM;MACdF,KAAK,CAACmC,GAAG,CAAE,cAAavB,SAAU,EAAC,EAChCwB,IAAI,CAAC,CAAC;QAAEC;MAAK,CAAC,KAAK;QAClBtB,KAAK,CAACC,OAAM,GAAIqB,IAAI;QACpB;MACF,CAAC,EACAC,KAAK,CAACJ,KAAI,IAAK;QACdF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,CAAC;IACN,CAAC,CAAC;IAEF,OAAO;MAAEnB,KAAK;MAAEG,aAAa;MAAEC,UAAU;MAAEC;IAAa,CAAC;EAC3D;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}