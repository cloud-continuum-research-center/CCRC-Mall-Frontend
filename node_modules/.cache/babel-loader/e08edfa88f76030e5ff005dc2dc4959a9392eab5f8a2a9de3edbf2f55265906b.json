{"ast":null,"code":"import { onMounted, ref } from \"vue\";\nimport * as SPLAT from \"gsplat\";\nexport default {\n  name: \"Rendering\",\n  props: {\n    url: String\n  },\n  setup(props) {\n    const canvasRef = ref(null);\n    let renderer;\n    let controls;\n    const scene = new SPLAT.Scene();\n    const camera = new SPLAT.Camera();\n    const loadModel = async () => {\n      //            await SPLAT.Loader.LoadAsync(props.url, scene, () => { });\n      await SPLAT.PLYLoader.LoadAsync(props.url, scene, () => {});\n    };\n    const render = () => {\n      const frame = () => {\n        controls.update();\n        renderer.render(scene, camera);\n        requestAnimationFrame(frame);\n      };\n      requestAnimationFrame(frame);\n    };\n    onMounted(async () => {\n      renderer = new SPLAT.WebGLRenderer(canvasRef.value);\n      controls = new SPLAT.OrbitControls(camera, renderer.canvas);\n      await loadModel();\n      render();\n    });\n    return {\n      scene,\n      camera,\n      renderer,\n      controls,\n      canvasRef\n    };\n  }\n};","map":{"version":3,"names":["onMounted","ref","SPLAT","name","props","url","String","setup","canvasRef","renderer","controls","scene","Scene","camera","Camera","loadModel","PLYLoader","LoadAsync","render","frame","update","requestAnimationFrame","WebGLRenderer","value","OrbitControls","canvas"],"sources":["C:\\Users\\boo\\icns\\shop\\front-end\\src\\components\\Rendering.vue"],"sourcesContent":["<template>\r\n    <div class=\"rendering\">\r\n        <h2>3D Ver.</h2>\r\n        <canvas ref=\"canvasRef\" width=\"800\" height=\"400\" display=\"block\" boxSizing=\"border-box\"></canvas>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { onMounted, ref } from \"vue\";\r\nimport * as SPLAT from \"gsplat\";\r\n\r\nexport default {\r\n    name: \"Rendering\",\r\n    props: {\r\n        url: String\r\n    },\r\n    setup(props) {\r\n        const canvasRef=ref(null);\r\n        let renderer;\r\n        let controls;\r\n\r\n        const scene = new SPLAT.Scene();\r\n        const camera = new SPLAT.Camera();\r\n\r\n        const loadModel = async () => {\r\n//            await SPLAT.Loader.LoadAsync(props.url, scene, () => { });\r\n            await SPLAT.PLYLoader.LoadAsync(props.url, scene, () => { });\r\n        };\r\n\r\n        const render = () => {\r\n            const frame = () => {   \r\n                controls.update();\r\n                renderer.render(scene, camera);\r\n                requestAnimationFrame(frame);\r\n            };\r\n            requestAnimationFrame(frame);\r\n        };\r\n\r\n        onMounted(async () => {\r\n            renderer=new SPLAT.WebGLRenderer(canvasRef.value);\r\n            controls = new SPLAT.OrbitControls(camera, renderer.canvas);\r\n\r\n            await loadModel();\r\n            render();\r\n        });\r\n\r\n        return { scene, camera, renderer, controls, canvasRef };\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.rendering {\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n</style>\r\n"],"mappings":"AAQA,SAASA,SAAS,EAAEC,GAAE,QAAS,KAAK;AACpC,OAAO,KAAKC,KAAI,MAAO,QAAQ;AAE/B,eAAe;EACXC,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE;IACHC,GAAG,EAAEC;EACT,CAAC;EACDC,KAAKA,CAACH,KAAK,EAAE;IACT,MAAMI,SAAS,GAACP,GAAG,CAAC,IAAI,CAAC;IACzB,IAAIQ,QAAQ;IACZ,IAAIC,QAAQ;IAEZ,MAAMC,KAAI,GAAI,IAAIT,KAAK,CAACU,KAAK,CAAC,CAAC;IAC/B,MAAMC,MAAK,GAAI,IAAIX,KAAK,CAACY,MAAM,CAAC,CAAC;IAEjC,MAAMC,SAAQ,GAAI,MAAAA,CAAA,KAAY;MACtC;MACY,MAAMb,KAAK,CAACc,SAAS,CAACC,SAAS,CAACb,KAAK,CAACC,GAAG,EAAEM,KAAK,EAAE,MAAM,CAAE,CAAC,CAAC;IAChE,CAAC;IAED,MAAMO,MAAK,GAAIA,CAAA,KAAM;MACjB,MAAMC,KAAI,GAAIA,CAAA,KAAM;QAChBT,QAAQ,CAACU,MAAM,CAAC,CAAC;QACjBX,QAAQ,CAACS,MAAM,CAACP,KAAK,EAAEE,MAAM,CAAC;QAC9BQ,qBAAqB,CAACF,KAAK,CAAC;MAChC,CAAC;MACDE,qBAAqB,CAACF,KAAK,CAAC;IAChC,CAAC;IAEDnB,SAAS,CAAC,YAAY;MAClBS,QAAQ,GAAC,IAAIP,KAAK,CAACoB,aAAa,CAACd,SAAS,CAACe,KAAK,CAAC;MACjDb,QAAO,GAAI,IAAIR,KAAK,CAACsB,aAAa,CAACX,MAAM,EAAEJ,QAAQ,CAACgB,MAAM,CAAC;MAE3D,MAAMV,SAAS,CAAC,CAAC;MACjBG,MAAM,CAAC,CAAC;IACZ,CAAC,CAAC;IAEF,OAAO;MAAEP,KAAK;MAAEE,MAAM;MAAEJ,QAAQ;MAAEC,QAAQ;MAAEF;IAAU,CAAC;EAC3D;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}