{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport router from \"@/scripts/router\";\nexport default {\n  data() {\n    return {\n      formData: {\n        name: \"\",\n        description: \"\",\n        price: 0,\n        category_id: 1,\n        image: null,\n        video: null\n      },\n      previewImage: null,\n      previewVideo: null\n    };\n  },\n  methods: {\n    handleImageUpload(event) {\n      this.formData.image = event.target.files[0];\n      if (this.formData.image) {\n        const reader = new FileReader();\n        reader.onload = () => {\n          this.previewImage = reader.result;\n        };\n        reader.readAsDataURL(this.formData.image);\n      }\n    },\n    handleVideoUpload(event) {\n      this.formData.video = event.target.files[0];\n      if (this.formData.video) {\n        const reader = new FileReader();\n        reader.onload = () => {\n          this.previewVideo = reader.result;\n        };\n        reader.readAsDataURL(this.formData.video);\n      }\n    },\n    submitForm() {\n      const formData = new FormData();\n      formData.append('name', this.formData.name);\n      formData.append('description', this.formData.description);\n      formData.append('price', this.formData.price);\n      formData.append('category_id', this.formData.category_id);\n      formData.append('image', this.formData.image);\n      formData.append('video', this.formData.video);\n      axios.post(\"/api/items/\", formData).then(response => {\n        console.log(\"상품이 성공적으로 등록되었습니다:\", response.data);\n        window.alert('상품이 성공적으로 등록되었습니다.');\n        router.push({\n          path: '/'\n        });\n      }).catch(error => {\n        console.error(\"상품 등록에 실패했습니다:\", error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","router","data","formData","name","description","price","category_id","image","video","previewImage","previewVideo","methods","handleImageUpload","event","target","files","reader","FileReader","onload","result","readAsDataURL","handleVideoUpload","submitForm","FormData","append","post","then","response","console","log","window","alert","push","path","catch","error"],"sources":["C:\\Users\\boo\\icns\\shop\\front-end\\src\\pages\\ItemRegistration.vue"],"sourcesContent":["<!-- views/ItemRegistration.vue -->\r\n\r\n<template>\r\n    <div class=\"item-registration\">\r\n        <h1 class=\"item-register-title\">Register Your Product Here!</h1>\r\n\r\n        <!-- 상품 등록 폼 -->\r\n        <form @submit.prevent=\"submitForm\" class=\"item-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"itemName\" class=\"form-label\">Product Name</label>\r\n                <input type=\"text\" id=\"itemName\" v-model=\"formData.name\" class=\"form-control\" required />\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"itemImage\" class=\"form-label\">Upload Product Image</label>\r\n                <input type=\"file\" id=\"itemImage\" @change=\"handleImageUpload\" class=\"form-control\" required />\r\n                <img v-if=\"previewImage\" :src=\"previewImage\" alt=\"Preview\" class=\"preview-image\">\r\n                <span v-if=\"previewImage\">[미리보기]</span>\r\n            </div>\r\n\r\n            <!-- 비디오 업로드 -->\r\n            <div class=\"form-group\">\r\n                <label for=\"itemVideo\" class=\"form-label\">비디오 업로드</label>\r\n                <input type=\"file\" id=\"itemVideo\" @change=\"handleVideoUpload\" class=\"form-control\" required />\r\n                <video v-if=\"previewVideo\" :src=\"previewVideo\" alt=\"Preview\" class=\"preview-video\" controls></video>\r\n                <span v-if=\"previewVideo\">[미리보기]</span>\r\n            </div>\r\n\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"itemDescription\" class=\"form-label\">상품 설명</label>\r\n                <textarea id=\"itemDescription\" v-model=\"formData.description\" class=\"form-control\" required></textarea>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"itemPrice\" class=\"form-label\">가격</label>\r\n                <input type=\"number\" id=\"itemPrice\" v-model=\"formData.price\" class=\"form-control\" required />\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"itemCategory\" class=\"form-label\">카테고리</label>\r\n                <select id=\"itemCategory\" v-model=\"formData.category_id\" class=\"form-select\" required>\r\n                    <option value=\"1\">책상</option>\r\n                    <option value=\"2\">침대</option>\r\n                    <option value=\"3\">의자</option>\r\n                </select>\r\n            </div>\r\n\r\n            <button type=\"submit\" class=\"item-register-submit\">등록하기</button>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport router from \"@/scripts/router\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            formData: {\r\n                name: \"\",\r\n                description: \"\",\r\n                price: 0,\r\n                category_id: 1,\r\n                image: null,\r\n                video: null\r\n            },\r\n            previewImage: null,\r\n            previewVideo: null\r\n        };\r\n    },\r\n    methods: {\r\n        handleImageUpload(event) {\r\n            this.formData.image = event.target.files[0];\r\n            if (this.formData.image) {\r\n                const reader = new FileReader();\r\n                reader.onload = () => {\r\n                    this.previewImage = reader.result;\r\n                };\r\n                reader.readAsDataURL(this.formData.image);\r\n            }\r\n        },\r\n        handleVideoUpload(event) {\r\n            this.formData.video = event.target.files[0];\r\n            if (this.formData.video) {\r\n                const reader = new FileReader();\r\n                reader.onload = () => {\r\n                    this.previewVideo = reader.result;\r\n                };\r\n                reader.readAsDataURL(this.formData.video);\r\n            }\r\n        },\r\n        submitForm() {\r\n            const formData = new FormData();\r\n            formData.append('name', this.formData.name);\r\n            formData.append('description', this.formData.description);\r\n            formData.append('price', this.formData.price);\r\n            formData.append('category_id', this.formData.category_id);\r\n            formData.append('image', this.formData.image);\r\n            formData.append('video', this.formData.video);\r\n\r\n            axios.post(\"/api/items/\", formData).then((response) => {\r\n                console.log(\"상품이 성공적으로 등록되었습니다:\", response.data);\r\n                window.alert('상품이 성공적으로 등록되었습니다.');\r\n                router.push({ path: '/' });\r\n            }).catch((error) => {\r\n                console.error(\"상품 등록에 실패했습니다:\", error);\r\n            });\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@import '../assets/css/pages/itemregistration.css'\r\n</style>"],"mappings":";AAsDA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,MAAK,MAAO,kBAAkB;AAErC,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,QAAQ,EAAE;QACNC,IAAI,EAAE,EAAE;QACRC,WAAW,EAAE,EAAE;QACfC,KAAK,EAAE,CAAC;QACRC,WAAW,EAAE,CAAC;QACdC,KAAK,EAAE,IAAI;QACXC,KAAK,EAAE;MACX,CAAC;MACDC,YAAY,EAAE,IAAI;MAClBC,YAAY,EAAE;IAClB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,iBAAiBA,CAACC,KAAK,EAAE;MACrB,IAAI,CAACX,QAAQ,CAACK,KAAI,GAAIM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAC3C,IAAI,IAAI,CAACb,QAAQ,CAACK,KAAK,EAAE;QACrB,MAAMS,MAAK,GAAI,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,MAAK,GAAI,MAAM;UAClB,IAAI,CAACT,YAAW,GAAIO,MAAM,CAACG,MAAM;QACrC,CAAC;QACDH,MAAM,CAACI,aAAa,CAAC,IAAI,CAAClB,QAAQ,CAACK,KAAK,CAAC;MAC7C;IACJ,CAAC;IACDc,iBAAiBA,CAACR,KAAK,EAAE;MACrB,IAAI,CAACX,QAAQ,CAACM,KAAI,GAAIK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAC3C,IAAI,IAAI,CAACb,QAAQ,CAACM,KAAK,EAAE;QACrB,MAAMQ,MAAK,GAAI,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,MAAK,GAAI,MAAM;UAClB,IAAI,CAACR,YAAW,GAAIM,MAAM,CAACG,MAAM;QACrC,CAAC;QACDH,MAAM,CAACI,aAAa,CAAC,IAAI,CAAClB,QAAQ,CAACM,KAAK,CAAC;MAC7C;IACJ,CAAC;IACDc,UAAUA,CAAA,EAAG;MACT,MAAMpB,QAAO,GAAI,IAAIqB,QAAQ,CAAC,CAAC;MAC/BrB,QAAQ,CAACsB,MAAM,CAAC,MAAM,EAAE,IAAI,CAACtB,QAAQ,CAACC,IAAI,CAAC;MAC3CD,QAAQ,CAACsB,MAAM,CAAC,aAAa,EAAE,IAAI,CAACtB,QAAQ,CAACE,WAAW,CAAC;MACzDF,QAAQ,CAACsB,MAAM,CAAC,OAAO,EAAE,IAAI,CAACtB,QAAQ,CAACG,KAAK,CAAC;MAC7CH,QAAQ,CAACsB,MAAM,CAAC,aAAa,EAAE,IAAI,CAACtB,QAAQ,CAACI,WAAW,CAAC;MACzDJ,QAAQ,CAACsB,MAAM,CAAC,OAAO,EAAE,IAAI,CAACtB,QAAQ,CAACK,KAAK,CAAC;MAC7CL,QAAQ,CAACsB,MAAM,CAAC,OAAO,EAAE,IAAI,CAACtB,QAAQ,CAACM,KAAK,CAAC;MAE7CT,KAAK,CAAC0B,IAAI,CAAC,aAAa,EAAEvB,QAAQ,CAAC,CAACwB,IAAI,CAAEC,QAAQ,IAAK;QACnDC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,QAAQ,CAAC1B,IAAI,CAAC;QAChD6B,MAAM,CAACC,KAAK,CAAC,oBAAoB,CAAC;QAClC/B,MAAM,CAACgC,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAI,CAAC,CAAC;MAC9B,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;QAChBP,OAAO,CAACO,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MAC1C,CAAC,CAAC;IACN;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}