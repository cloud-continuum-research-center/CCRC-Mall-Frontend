{"ast":null,"code":"import axios from \"axios\";\nimport { ref, reactive, computed } from \"vue\";\nexport default {\n  name: \"ProductDetail\",\n  setup() {\n    const product = reactive(null); // Initialize product as reactive\n    const isLoading = ref(false); // Use refs for reactive state variables\n\n    const fetchProduct = async () => {\n      try {\n        isLoading.value = true; // Indicate loading state\n        const itemId = Number(this.$route.params.id); // Ensure numeric ID\n        const response = await axios.get(`/api/items/${itemId}`);\n        product.value = response.data;\n      } catch (error) {\n        console.error(\"Error fetching product:\", error);\n        // Handle errors gracefully, e.g., display an error message\n      } finally {\n        isLoading.value = false; // Update loading state regardless of success/error\n      }\n    };\n    fetchProduct(); // Fetch product on component creation\n\n    const formattedPrice = computed(() => {\n      // Add currency formatting using a filter (example assuming you have it set up)\n      return new Intl.NumberFormat(\"ko-KR\", {\n        style: \"currency\",\n        currency: \"KRW\"\n      }).format(product.value.price);\n    });\n    return {\n      product,\n      isLoading,\n      formattedPrice\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","reactive","computed","name","setup","product","isLoading","fetchProduct","value","itemId","Number","$route","params","id","response","get","data","error","console","formattedPrice","Intl","NumberFormat","style","currency","format","price"],"sources":["C:\\Users\\boo\\icns\\shop\\front-end\\src\\pages\\ProductDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"product-detail\">\r\n    <h1 v-if=\"product?.name\">\r\n      {{ product.name }} 상세 페이지\r\n    </h1>\r\n    <div v-if=\"product\" class=\"card mb-3\">\r\n      <img :src=\"product.image\" class=\"card-img-top\" alt=\"Product Image\" />\r\n      <div class=\"card-body\">\r\n        <h5 class=\"card-title\">{{ product.name }}</h5>\r\n        <p class=\"card-text\">{{ product.description }}</p>\r\n        <ul class=\"list-group list-group-flush\">\r\n          <li class=\"list-group-item\">가격: {{ product.price }}</li>\r\n          <li class=\"list-group-item\">카테고리: {{ product.category?.name }}</li>\r\n          </ul>\r\n      </div>\r\n    </div>\r\n    <span v-if=\"!product && isLoading\">Loading product...</span>\r\n    <span v-else-if=\"!product && !isLoading\">상품 정보를 불러오지 못했습니다.</span>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { ref, reactive, computed } from \"vue\";\r\n\r\nexport default {\r\n  name: \"ProductDetail\",\r\n  setup() {\r\n    const product = reactive(null); // Initialize product as reactive\r\n    const isLoading = ref(false); // Use refs for reactive state variables\r\n\r\n    const fetchProduct = async () => {\r\n      try {\r\n        isLoading.value = true; // Indicate loading state\r\n        const itemId = Number(this.$route.params.id); // Ensure numeric ID\r\n        const response = await axios.get(`/api/items/${itemId}`);\r\n        product.value = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching product:\", error);\r\n        // Handle errors gracefully, e.g., display an error message\r\n      } finally {\r\n        isLoading.value = false; // Update loading state regardless of success/error\r\n      }\r\n    };\r\n\r\n    fetchProduct(); // Fetch product on component creation\r\n\r\n    const formattedPrice = computed(() => {\r\n      // Add currency formatting using a filter (example assuming you have it set up)\r\n      return new Intl.NumberFormat(\"ko-KR\", { style: \"currency\", currency: \"KRW\" }).format(product.value.price);\r\n    });\r\n\r\n    return {\r\n      product,\r\n      isLoading,\r\n      formattedPrice,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n  /* Style the product detail elements */\r\n</style>\r\n"],"mappings":"AAsBA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,GAAG,EAAEC,QAAQ,EAAEC,QAAO,QAAS,KAAK;AAE7C,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,KAAKA,CAAA,EAAG;IACN,MAAMC,OAAM,GAAIJ,QAAQ,CAAC,IAAI,CAAC,EAAE;IAChC,MAAMK,SAAQ,GAAIN,GAAG,CAAC,KAAK,CAAC,EAAE;;IAE9B,MAAMO,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACFD,SAAS,CAACE,KAAI,GAAI,IAAI,EAAE;QACxB,MAAMC,MAAK,GAAIC,MAAM,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,CAAC,EAAE;QAC9C,MAAMC,QAAO,GAAI,MAAMf,KAAK,CAACgB,GAAG,CAAE,cAAaN,MAAO,EAAC,CAAC;QACxDJ,OAAO,CAACG,KAAI,GAAIM,QAAQ,CAACE,IAAI;MAC/B,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/C;MACF,UAAU;QACRX,SAAS,CAACE,KAAI,GAAI,KAAK,EAAE;MAC3B;IACF,CAAC;IAEDD,YAAY,CAAC,CAAC,EAAE;;IAEhB,MAAMY,cAAa,GAAIjB,QAAQ,CAAC,MAAM;MACpC;MACA,OAAO,IAAIkB,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;QAAEC,KAAK,EAAE,UAAU;QAAEC,QAAQ,EAAE;MAAM,CAAC,CAAC,CAACC,MAAM,CAACnB,OAAO,CAACG,KAAK,CAACiB,KAAK,CAAC;IAC3G,CAAC,CAAC;IAEF,OAAO;MACLpB,OAAO;MACPC,SAAS;MACTa;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}