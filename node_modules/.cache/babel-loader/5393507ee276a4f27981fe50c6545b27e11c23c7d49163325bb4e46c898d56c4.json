{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-a0488ee8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"rendering\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"3D 렌더링\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  ref: \"renderingCanvas\",\n  width: \"800\",\n  height: \"400\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"canvas\", _hoisted_3, null, 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","ref","width","height","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3"],"sources":["C:\\Users\\boo\\icns\\shop\\front-end\\src\\components\\Rendering.vue"],"sourcesContent":["<template>\r\n    <div class=\"rendering\">\r\n        <h2>3D 렌더링</h2>\r\n        <canvas ref=\"renderingCanvas\" width=\"800\" height=\"400\"></canvas>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { onMounted } from \"vue\";\r\nimport * as SPLAT from \"gsplat\";\r\n\r\nexport default {\r\n    name: \"Rendering\",\r\n    props: {\r\n        url: String\r\n    },\r\n    setup(props) {\r\n        const scene = new SPLAT.Scene();\r\n        const camera = new SPLAT.Camera();\r\n        const renderer = new SPLAT.WebGLRenderer();\r\n        const controls = new SPLAT.OrbitControls(camera, renderer.canvas);\r\n\r\n        const loadModel = async () => {\r\n//            await SPLAT.Loader.LoadAsync(props.url, scene, () => { });\r\n            await SPLAT.PLYLoader.LoadAsync(props.url, scene, () => { });\r\n        };\r\n\r\n        const render = () => {\r\n            const frame = () => {   \r\n                controls.update();\r\n                renderer.render(scene, camera);\r\n                requestAnimationFrame(frame);\r\n            };\r\n            requestAnimationFrame(frame);\r\n        };\r\n\r\n        onMounted(async () => {\r\n            await loadModel();\r\n            render();\r\n        });\r\n\r\n        return { scene, camera, renderer, controls };\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.rendering {\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n</style>\r\n"],"mappings":";;;EACSA,KAAK,EAAC;AAAW;gEAClBC,mBAAA,CAAe,YAAX,QAAM;;EACFC,GAAG,EAAC,iBAAiB;EAACC,KAAK,EAAC,KAAK;EAACC,MAAM,EAAC;;;uBAFrDC,mBAAA,CAGM,OAHNC,UAGM,GAFFC,UAAe,EACfN,mBAAA,CAAgE,UAAhEO,UAAgE,8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}