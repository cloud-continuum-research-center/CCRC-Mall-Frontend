{"ast":null,"code":"import axios from \"axios\";\nimport { reactive, onMounted } from \"vue\";\nimport { useRoute } from 'vue-router';\nexport default {\n  name: \"ProductDetail\",\n  data() {\n    return {\n      reviewData: {\n        content: \"\",\n        star: 1,\n        user_id: 1,\n        item_id: 6\n      }\n    };\n  },\n  setup() {\n    const route = useRoute();\n    const productId = route.params.id;\n    const state = reactive({\n      product: {},\n      reviews: [],\n      newReview: {\n        content: \"\",\n        star: 1\n      }\n    });\n    onMounted(() => {\n      axios.get(`/api/items/${productId}`).then(({\n        data\n      }) => {\n        state.product = data;\n        console.log(state.product);\n      }).catch(error => {\n        console.error(\"상품을 불러오는 동안 오류 발생:\", error);\n      });\n    });\n    return {\n      state\n    };\n  },\n  methods: {\n    submitForm() {\n      axios.post(`/api/items/${route.params.id}/reviews/`, this.reviewData).then(response => {\n        console.log(\"리뷰가 성공적으로 등록되었습니다:\", response.data);\n        window.alert('리뷰가 성공적으로 등록되었습니다.');\n      }).catch(error => {\n        console.error(\"상품 등록에 실패했습니다:\", error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","reactive","onMounted","useRoute","name","data","reviewData","content","star","user_id","item_id","setup","route","productId","params","id","state","product","reviews","newReview","get","then","console","log","catch","error","methods","submitForm","post","response","window","alert"],"sources":["C:\\Users\\boo\\icns\\shop\\front-end\\src\\pages\\ProductDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"product-detail\">\r\n\r\n    <!-- 상품 상세 정보 -->\r\n    <div v-if=\"state.product\">\r\n      <h2>{{ state.product.name }}</h2>\r\n <!-- <img :src=\"state.product.image\" :alt=\"state.product.name\" />-->\r\n      <p>Description: {{ state.product.description }}</p>\r\n      <p>Price: {{ state.product.price }}</p>\r\n    </div>\r\n    <div v-else>\r\n      <p>Loading...</p>\r\n    </div>\r\n\r\n\r\n    <div class=\"review-form\">\r\n      <h3>리뷰 작성</h3>\r\n      <form @submit.prevent=\"submitForm\">\r\n        <div class=\"form-group\">\r\n          <label for=\"review-content\">내용</label>\r\n          <textarea id=\"review-content\" v-model=\"reviewData.content\" rows=\"5\" class=\"form-control\"></textarea>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"review-star\">별점</label>\r\n          <select id=\"review-star\" v-model=\"reviewData.star\" class=\"form-control\">\r\n            <option value=\"1\">1</option>\r\n            <option value=\"2\">2</option>\r\n            <option value=\"3\">3</option>\r\n            <option value=\"4\">4</option>\r\n            <option value=\"5\">5</option>\r\n          </select>\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary\">등록</button>\r\n      </form>\r\n    </div>\r\n\r\n</div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nimport { reactive, onMounted } from \"vue\";\r\nimport { useRoute } from 'vue-router';\r\n\r\nexport default {\r\n  name: \"ProductDetail\",\r\n\r\n  data() {\r\n        return {\r\n            reviewData: {\r\n                content: \"\",\r\n                star: 1,\r\n                user_id: 1,\r\n                item_id: 6,\r\n            },\r\n        };\r\n    },\r\n\r\n  setup() {\r\n    const route = useRoute();\r\n    const productId = route.params.id;\r\n\r\n    const state = reactive({\r\n      product: {},\r\n      reviews: [],\r\n      newReview: { content: \"\", star: 1 }\r\n\r\n    });\r\n\r\n\r\n\r\n\r\n    onMounted(() => {\r\n      axios.get(`/api/items/${productId}`).then(({ data }) => {\r\n        state.product = data;\r\n\r\n        console.log(state.product);\r\n      }).catch(error => {\r\n        console.error(\"상품을 불러오는 동안 오류 발생:\", error);       \r\n      });\r\n\r\n    });\r\n\r\n\r\n\r\n    return { state };\r\n  },\r\n\r\n\r\n  methods: {\r\n    submitForm() {\r\n      axios.post(`/api/items/${route.params.id}/reviews/`, this.reviewData).then((response) => {\r\n        console.log(\"리뷰가 성공적으로 등록되었습니다:\", response.data);\r\n        window.alert('리뷰가 성공적으로 등록되었습니다.'); \r\n      }).catch((error) => {\r\n        console.error(\"상품 등록에 실패했습니다:\", error);\r\n            });\r\n        },  \r\n    },\r\n};\r\n</script>\r\n"],"mappings":"AAuCA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAQ,QAAS,KAAK;AACzC,SAASC,QAAO,QAAS,YAAY;AAErC,eAAe;EACbC,IAAI,EAAE,eAAe;EAErBC,IAAIA,CAAA,EAAG;IACD,OAAO;MACHC,UAAU,EAAE;QACRC,OAAO,EAAE,EAAE;QACXC,IAAI,EAAE,CAAC;QACPC,OAAO,EAAE,CAAC;QACVC,OAAO,EAAE;MACb;IACJ,CAAC;EACL,CAAC;EAEHC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIT,QAAQ,CAAC,CAAC;IACxB,MAAMU,SAAQ,GAAID,KAAK,CAACE,MAAM,CAACC,EAAE;IAEjC,MAAMC,KAAI,GAAIf,QAAQ,CAAC;MACrBgB,OAAO,EAAE,CAAC,CAAC;MACXC,OAAO,EAAE,EAAE;MACXC,SAAS,EAAE;QAAEZ,OAAO,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAE;IAEpC,CAAC,CAAC;IAKFN,SAAS,CAAC,MAAM;MACdF,KAAK,CAACoB,GAAG,CAAE,cAAaP,SAAU,EAAC,CAAC,CAACQ,IAAI,CAAC,CAAC;QAAEhB;MAAK,CAAC,KAAK;QACtDW,KAAK,CAACC,OAAM,GAAIZ,IAAI;QAEpBiB,OAAO,CAACC,GAAG,CAACP,KAAK,CAACC,OAAO,CAAC;MAC5B,CAAC,CAAC,CAACO,KAAK,CAACC,KAAI,IAAK;QAChBH,OAAO,CAACG,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC5C,CAAC,CAAC;IAEJ,CAAC,CAAC;IAIF,OAAO;MAAET;IAAM,CAAC;EAClB,CAAC;EAGDU,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX3B,KAAK,CAAC4B,IAAI,CAAE,cAAahB,KAAK,CAACE,MAAM,CAACC,EAAG,WAAU,EAAE,IAAI,CAACT,UAAU,CAAC,CAACe,IAAI,CAAEQ,QAAQ,IAAK;QACvFP,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEM,QAAQ,CAACxB,IAAI,CAAC;QAChDyB,MAAM,CAACC,KAAK,CAAC,oBAAoB,CAAC;MACpC,CAAC,CAAC,CAACP,KAAK,CAAEC,KAAK,IAAK;QAClBH,OAAO,CAACG,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MAClC,CAAC,CAAC;IACN;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}