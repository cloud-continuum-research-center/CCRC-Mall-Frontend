{"ast":null,"code":"import { createElementVNode as _createElementVNode, TransitionGroup as _TransitionGroup, withCtx as _withCtx, createVNode as _createVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"test-page\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"테스트 페이지\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"banner\"\n};\nconst _hoisted_4 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", {\n    class: \"slider\",\n    style: _normalizeStyle({\n      transform: 'translateX(-' + $data.currentIndex * 100 + '%)'\n    })\n  }, [_createVNode(_TransitionGroup, {\n    name: \"slide\",\n    tag: \"div\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"img\", {\n      src: $data.slideImg,\n      class: \"slide\"\n    }, null, 8 /* PROPS */, _hoisted_4)]),\n    _: 1 /* STABLE */\n  })], 4 /* STYLE */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.prevSlide && $options.prevSlide(...args)),\n    class: \"prev-btn\"\n  }, \"이전\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.nextSlide && $options.nextSlide(...args)),\n    class: \"next-btn\"\n  }, \"다음\")])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","style","_normalizeStyle","transform","$data","currentIndex","_createVNode","_TransitionGroup","name","tag","default","_withCtx","src","slideImg","_hoisted_4","_","onClick","_cache","args","$options","prevSlide","nextSlide"],"sources":["C:\\Users\\boo\\icns\\shop\\front-end\\src\\pages\\Test.vue"],"sourcesContent":["<template>\r\n    <div class=\"test-page\">\r\n        <h1>테스트 페이지</h1>\r\n\r\n        <div class=\"banner\">\r\n            <div class=\"slider\" :style=\"{ transform: 'translateX(-' + currentIndex * 100 + '%)' }\">\r\n                <transition-group name=\"slide\" tag=\"div\">\r\n                    <img :src=\"slideImg\" class=\"slide\">\r\n                </transition-group>\r\n            </div>\r\n            <button @click=\"prevSlide\" class=\"prev-btn\">이전</button>\r\n            <button @click=\"nextSlide\" class=\"next-btn\">다음</button>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"Test\",\r\n    data() {\r\n        return {\r\n            images: [\r\n                '/slide/slide1.jpg',\r\n                '/slide/slide2.jpg',\r\n                '/slide/slide3.jpg',\r\n                '/slide/slide4.jpg'\r\n            ],\r\n            currentIndex: 0,\r\n            slideImg: ''\r\n        };\r\n    },\r\n    mounted() {\r\n        this.setSlideImage(); // 초기에 슬라이드 이미지 설정\r\n    },\r\n\r\n    methods: {\r\n        prevSlide() {\r\n            this.currentIndex = (this.currentIndex - 1 + this.images.length) % this.images.length;\r\n            this.setSlideImage();\r\n            console.log(this.currentIndex);\r\n            console.log(\"images.length\", this.images.length);\r\n        },\r\n        nextSlide() {\r\n            this.currentIndex = (this.currentIndex + 1) % this.images.length;\r\n            this.setSlideImage();\r\n            console.log(this.currentIndex);\r\n            console.log(\"images.length\", this.images.length);\r\n        },\r\n        setSlideImage() {\r\n            this.slideImg = this.images[this.currentIndex];\r\n        }\r\n    },\r\n};\r\n</script>\r\n\r\n<style>\r\n.banner {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 400px;\r\n    /* 슬라이드의 높이를 조절합니다. */\r\n    overflow: hidden;\r\n    /* 슬라이드가 부모 요소를 벗어나지 않도록 설정합니다. */\r\n}\r\n\r\n.slider {\r\n    display: flex;\r\n    width: 400%;\r\n    /* 모든 이미지가 슬라이드될 수 있도록 슬라이드의 너비를 설정합니다. */\r\n    height: 100%;\r\n    /* 슬라이드의 높이를 조절합니다. */\r\n    transition: transform 0.5s ease;\r\n    /* 슬라이드 효과를 위한 트랜지션 설정 */\r\n}\r\n\r\n.slide {\r\n    flex: 0 0 25%;\r\n    /* 슬라이드의 너비를 조절합니다. 여기서는 4개의 이미지가 있으므로 25%로 설정합니다. */\r\n    width: 100%;\r\n    /* 이미지 너비 설정 */\r\n    height: 100%;\r\n    /* 이미지 높이 설정 */\r\n    object-fit: cover;\r\n    /* 이미지가 적절하게 화면에 맞게 조절되도록 */\r\n}\r\n\r\n.prev-btn,\r\n.next-btn {\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    padding: 10px;\r\n    border: none;\r\n    background-color: transparent;\r\n    color: rgb(12, 9, 9);\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n    z-index: 1;\r\n    /* 버튼이 이미지 위에 표시되도록 설정합니다. */\r\n}\r\n\r\n.prev-btn {\r\n    left: 10px;\r\n}\r\n\r\n.next-btn {\r\n    right: 10px;\r\n}\r\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAW;gCAClBC,mBAAA,CAAgB,YAAZ,SAAO;;EAEND,KAAK,EAAC;AAAQ;mBAJ3B;;uBACIE,mBAAA,CAYM,OAZNC,UAYM,GAXFC,UAAgB,EAEhBH,mBAAA,CAQM,OARNI,UAQM,GAPFJ,mBAAA,CAIM;IAJDD,KAAK,EAAC,QAAQ;IAAEM,KAAK,EALtCC,eAAA;MAAAC,SAAA,mBAKsEC,KAAA,CAAAC,YAAY;IAAA;MAClEC,YAAA,CAEmBC,gBAAA;IAFDC,IAAI,EAAC,OAAO;IAACC,GAAG,EAAC;;IANnDC,OAAA,EAAAC,QAAA,CAOoB,MAAmC,CAAnCf,mBAAA,CAAmC;MAA7BgB,GAAG,EAAER,KAAA,CAAAS,QAAQ;MAAElB,KAAK,EAAC;4BAP/CmB,UAAA,E;IAAAC,CAAA;uBAUYnB,mBAAA,CAAuD;IAA9CoB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;IAAEvB,KAAK,EAAC;KAAW,IAAE,GAC9CC,mBAAA,CAAuD;IAA9CoB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAE,SAAA,IAAAF,QAAA,CAAAE,SAAA,IAAAH,IAAA,CAAS;IAAEvB,KAAK,EAAC;KAAW,IAAE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}