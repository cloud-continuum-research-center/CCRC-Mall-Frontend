{"ast":null,"code":"import axios from \"axios\";\nimport { reactive, onMounted } from \"vue\";\nimport { useRoute } from 'vue-router';\nexport default {\n  name: \"ProductDetail\",\n  setup() {\n    const route = useRoute();\n    const productId = route.params.id;\n    const state = reactive({\n      product: {},\n      reviews: []\n    });\n    let reviewContent = \"\";\n    let reviewStar = 5; // Default star rating is 5\n\n    const submitReview = () => {\n      const reviewData = {\n        content: reviewContent,\n        star: reviewStar,\n        // For user_id and item_id, you might need to get them from your authentication system or other sources\n        user_id: 1,\n        // Example user_id, replace with actual user id\n        item_id: productId\n      };\n      axios.post(`/api/items/${productId}/reviews/`, reviewData).then(response => {\n        console.log(\"Review submitted successfully:\", response.data);\n        // Clear the form after successful submission\n        reviewContent = \"\";\n        reviewStar = 5;\n        // Optionally, you can update the UI to reflect the new review\n        // For example, fetching the product again to get updated reviews\n        fetchReviews();\n      }).catch(error => {\n        console.error(\"Error submitting review:\", error);\n      });\n    };\n\n    /*const fetchReviews = () => {\r\n      axios.get(`/api/items/${productId}/reviews/`)\r\n        .then(({ data }) => {\r\n          state.reviews = data;\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error fetching reviews:\", error);       \r\n        });\r\n    };\r\n    */\n    onMounted(() => {\n      axios.get(`/api/items/${productId}`).then(({\n        data\n      }) => {\n        state.product = data;\n        //fetchReviews(); // Fetch reviews after fetching product\n      }).catch(error => {\n        console.error(\"Error fetching product:\", error);\n      });\n    });\n    return {\n      state,\n      reviewContent,\n      reviewStar,\n      submitReview\n    };\n  }\n};","map":{"version":3,"names":["axios","reactive","onMounted","useRoute","name","setup","route","productId","params","id","state","product","reviews","reviewContent","reviewStar","submitReview","reviewData","content","star","user_id","item_id","post","then","response","console","log","data","fetchReviews","catch","error","get"],"sources":["C:\\Users\\boo\\icns\\shop\\front-end\\src\\pages\\ProductDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"product-detail\">\r\n    <!-- 상품 상세 정보 -->\r\n    <div v-if=\"state.product\">\r\n      <h2>{{ state.product.name }}</h2>\r\n      <p>Description: {{ state.product.description }}</p>\r\n      <p>Price: {{ state.product.price }}</p>\r\n    </div>\r\n    <div v-else>\r\n      <p>Loading...</p>\r\n    </div>\r\n\r\n    <!-- 리뷰 작성 폼 -->\r\n    <form @submit.prevent=\"submitReview\">\r\n      <textarea v-model=\"reviewContent\" placeholder=\"리뷰 작성란\"></textarea>\r\n      <select v-model=\"reviewStar\">\r\n        <option value=\"1\">1 Star</option>\r\n        <option value=\"2\">2 Stars</option>\r\n        <option value=\"3\">3 Stars</option>\r\n        <option value=\"4\">4 Stars</option>\r\n        <option value=\"5\">5 Stars</option>\r\n      </select>\r\n      <button type=\"submit\">리뷰 등록하기</button>\r\n    </form>\r\n\r\n    <!-- 기존 리뷰 표시 \r\n    <div v-if=\"state.reviews.length\">\r\n      <h3>Reviews</h3>\r\n      <div v-for=\"review in state.reviews\" :key=\"review.id\">\r\n        <p>Content: {{ review.content }}</p>\r\n        <p>Star: {{ review.star }}</p>\r\n      </div>\r\n    </div>-->\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { reactive, onMounted } from \"vue\";\r\nimport { useRoute } from 'vue-router';\r\n\r\nexport default {\r\n  name: \"ProductDetail\",\r\n\r\n  setup() {\r\n    const route = useRoute();\r\n    const productId = route.params.id;\r\n\r\n    const state = reactive({\r\n      product: {},\r\n      reviews: [],\r\n    });\r\n\r\n    let reviewContent = \"\";\r\n    let reviewStar = 5; // Default star rating is 5\r\n\r\n    const submitReview = () => {\r\n      const reviewData = {\r\n        content: reviewContent,\r\n        star: reviewStar,\r\n        // For user_id and item_id, you might need to get them from your authentication system or other sources\r\n        user_id: 1, // Example user_id, replace with actual user id\r\n        item_id: productId,\r\n      };\r\n\r\n      axios.post(`/api/items/${productId}/reviews/`, reviewData)\r\n        .then(response => {\r\n          console.log(\"Review submitted successfully:\", response.data);\r\n          // Clear the form after successful submission\r\n          reviewContent = \"\";\r\n          reviewStar = 5;\r\n          // Optionally, you can update the UI to reflect the new review\r\n          // For example, fetching the product again to get updated reviews\r\n          fetchReviews();\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error submitting review:\", error);\r\n        });\r\n    };\r\n\r\n    /*const fetchReviews = () => {\r\n      axios.get(`/api/items/${productId}/reviews/`)\r\n        .then(({ data }) => {\r\n          state.reviews = data;\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error fetching reviews:\", error);       \r\n        });\r\n    };\r\n*/\r\n    onMounted(() => {\r\n      axios.get(`/api/items/${productId}`)\r\n        .then(({ data }) => {\r\n          state.product = data;\r\n          //fetchReviews(); // Fetch reviews after fetching product\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error fetching product:\", error);       \r\n        });\r\n    });\r\n\r\n    return { state, reviewContent, reviewStar, submitReview };\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AAsCA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAQ,QAAS,KAAK;AACzC,SAASC,QAAO,QAAS,YAAY;AAErC,eAAe;EACbC,IAAI,EAAE,eAAe;EAErBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIH,QAAQ,CAAC,CAAC;IACxB,MAAMI,SAAQ,GAAID,KAAK,CAACE,MAAM,CAACC,EAAE;IAEjC,MAAMC,KAAI,GAAIT,QAAQ,CAAC;MACrBU,OAAO,EAAE,CAAC,CAAC;MACXC,OAAO,EAAE;IACX,CAAC,CAAC;IAEF,IAAIC,aAAY,GAAI,EAAE;IACtB,IAAIC,UAAS,GAAI,CAAC,EAAE;;IAEpB,MAAMC,YAAW,GAAIA,CAAA,KAAM;MACzB,MAAMC,UAAS,GAAI;QACjBC,OAAO,EAAEJ,aAAa;QACtBK,IAAI,EAAEJ,UAAU;QAChB;QACAK,OAAO,EAAE,CAAC;QAAE;QACZC,OAAO,EAAEb;MACX,CAAC;MAEDP,KAAK,CAACqB,IAAI,CAAE,cAAad,SAAU,WAAU,EAAES,UAAU,EACtDM,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEF,QAAQ,CAACG,IAAI,CAAC;QAC5D;QACAb,aAAY,GAAI,EAAE;QAClBC,UAAS,GAAI,CAAC;QACd;QACA;QACAa,YAAY,CAAC,CAAC;MAChB,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdL,OAAO,CAACK,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,CAAC,CAAC;IACN,CAAC;;IAED;;;;;;;;;AASJ;IACI3B,SAAS,CAAC,MAAM;MACdF,KAAK,CAAC8B,GAAG,CAAE,cAAavB,SAAU,EAAC,EAChCe,IAAI,CAAC,CAAC;QAAEI;MAAK,CAAC,KAAK;QAClBhB,KAAK,CAACC,OAAM,GAAIe,IAAI;QACpB;MACF,CAAC,EACAE,KAAK,CAACC,KAAI,IAAK;QACdL,OAAO,CAACK,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,CAAC;IACN,CAAC,CAAC;IAEF,OAAO;MAAEnB,KAAK;MAAEG,aAAa;MAAEC,UAAU;MAAEC;IAAa,CAAC;EAC3D;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}