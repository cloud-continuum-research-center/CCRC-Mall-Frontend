{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-70bfea10\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"상품 등록 페이지\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-primary\"\n}, \"등록하기\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createCommentVNode(\" 상품 등록 폼 \"), _createElementVNode(\"form\", {\n    onSubmit: _cache[0] || (_cache[0] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"]))\n  }, [_createCommentVNode(\" ... (이전 코드와 동일) ... \"), _hoisted_2], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["_createElementVNode","type","class","_createElementBlock","_hoisted_1","_createCommentVNode","onSubmit","_cache","_withModifiers","args","$options","submitForm","_hoisted_2"],"sources":["C:\\Users\\boo\\icns\\shop\\front-end\\src\\pages\\ItemRegistration.vue"],"sourcesContent":["<!-- views/ItemRegistration.vue -->\r\n<template>\r\n    <div>\r\n      <h1>상품 등록 페이지</h1>\r\n  \r\n      <!-- 상품 등록 폼 -->\r\n      <form @submit.prevent=\"submitForm\">\r\n        <!-- ... (이전 코드와 동일) ... -->\r\n  \r\n        <button type=\"submit\" class=\"btn btn-primary\">등록하기</button>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from \"axios\";\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        formData: {\r\n          name: \"\",\r\n          image: \"\",\r\n          description: \"\",\r\n          price: 0,\r\n          category_id: 1,\r\n        },\r\n      };\r\n    },\r\n    methods: {\r\n      submitForm() {\r\n        // API 호출\r\n        axios\r\n          .post(\"/api/items/\", this.formData)\r\n          .then((response) => {\r\n            // API 호출 성공 시 실행되는 로직\r\n            console.log(\"상품이 성공적으로 등록되었습니다:\", response.data);\r\n            // 상태 업데이트, 리다이렉트 또는 기타 로직 수행\r\n          })\r\n          .catch((error) => {\r\n            // API 호출 실패 시 실행되는 로직\r\n            console.error(\"상품 등록에 실패했습니다:\", error);\r\n            // 에러 메시지 표시 또는 기타 처리 수행\r\n          });\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* 필요한 경우에만 스타일 추가 */\r\n  </style>\r\n  "],"mappings":";;gEAGMA,mBAAA,CAAkB,YAAd,WAAS;gEAMXA,mBAAA,CAA2D;EAAnDC,IAAI,EAAC,QAAQ;EAACC,KAAK,EAAC;GAAkB,MAAI;;uBAPtDC,mBAAA,CASM,cARJC,UAAkB,EAElBC,mBAAA,aAAgB,EAChBL,mBAAA,CAIO;IAJAM,QAAM,EAAAC,MAAA,QAAAA,MAAA,MANnBC,cAAA,KAAAC,IAAA,KAM6BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC/BJ,mBAAA,yBAA4B,EAE5BO,UAA2D,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}