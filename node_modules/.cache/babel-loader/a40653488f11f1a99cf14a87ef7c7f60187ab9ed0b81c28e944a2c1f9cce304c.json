{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-61c1be48\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"loading\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Loading...\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"progress\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", {\n    class: \"progress-bar\",\n    role: \"progressbar\",\n    style: _normalizeStyle({\n      width: $data.progress + '%'\n    }),\n    \"aria-valuenow\": \"progress\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\"\n  }, _toDisplayString($data.progress) + \"%\", 5 /* TEXT, STYLE */)])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","role","style","_normalizeStyle","width","$data","progress"],"sources":["C:\\Users\\boo\\icns\\shop\\front-end\\src\\pages\\Loading.vue"],"sourcesContent":["<template>\r\n    <div class=\"loading\">\r\n      <h1>Loading...</h1>\r\n      <div class=\"progress\">\r\n        <div class=\"progress-bar\" role=\"progressbar\" :style=\"{ width: progress + '%' }\" aria-valuenow=\"progress\" aria-valuemin=\"0\" aria-valuemax=\"100\">{{ progress }}%</div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from \"axios\";\r\n  import router from \"@/scripts/router\";\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        progress: 0\r\n      };\r\n    },\r\n    mounted() {\r\n      // 백엔드 서버로부터 진행률을 주기적으로 받아옵니다.\r\n      setInterval(async () => {\r\n        try {\r\n          const response = await axios.get('/api/items/progress');\r\n          this.progress = response.data.progress;\r\n          if (this.progress === 100) {\r\n            // 3D 변환이 완료되면 알림창을 띄우고 메인 페이지로 이동합니다.\r\n            window.alert('3D 변환이 완료되었습니다!');\r\n            router.push({ path: '/' });\r\n          }\r\n        } catch (error) {\r\n          console.error('진행률을 받아오는 중 오류 발생:', error);\r\n        }\r\n      }, 1000); // 1초마다 진행률 업데이트\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .loading {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 100vh;\r\n  }\r\n  \r\n  .progress {\r\n    width: 50%;\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .progress-bar {\r\n    background-color: #007bff;\r\n    width: 0;\r\n    transition: width 0.3s ease;\r\n  }\r\n  </style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAS;gEAClBC,mBAAA,CAAmB,YAAf,YAAU;;EACTD,KAAK,EAAC;AAAU;;uBAFvBE,mBAAA,CAKM,OALNC,UAKM,GAJJC,UAAmB,EACnBH,mBAAA,CAEM,OAFNI,UAEM,GADJJ,mBAAA,CAAoK;IAA/JD,KAAK,EAAC,cAAc;IAACM,IAAI,EAAC,aAAa;IAAEC,KAAK,EAJ3DC,eAAA;MAAAC,KAAA,EAIsEC,KAAA,CAAAC,QAAQ;IAAA;IAAU,eAAa,EAAC,UAAU;IAAC,eAAa,EAAC,GAAG;IAAC,eAAa,EAAC;sBAASD,KAAA,CAAAC,QAAQ,IAAG,GAAC,uB"},"metadata":{},"sourceType":"module","externalDependencies":[]}