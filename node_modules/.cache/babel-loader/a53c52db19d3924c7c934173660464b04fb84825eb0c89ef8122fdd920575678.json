{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, TransitionGroup as _TransitionGroup, withCtx as _withCtx, createVNode as _createVNode, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"test-page\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"테스트 페이지\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"banner\"\n};\nconst _hoisted_4 = [\"src\", \"alt\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", {\n    class: \"slider\",\n    style: _normalizeStyle({\n      width: $data.slideWidth + 'px'\n    })\n  }, [_createVNode(_TransitionGroup, {\n    name: \"slide\",\n    tag: \"div\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.images, (image, index) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: index,\n        class: _normalizeClass([\"slide\", {\n          'active': index === $data.currentIndex\n        }])\n      }, [_createElementVNode(\"img\", {\n        src: image,\n        alt: 'slide-' + index,\n        class: \"slide-image\"\n      }, null, 8 /* PROPS */, _hoisted_4)], 2 /* CLASS */);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  })], 4 /* STYLE */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.prevSlide && $options.prevSlide(...args)),\n    class: \"prev-btn\"\n  }, \"이전\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.nextSlide && $options.nextSlide(...args)),\n    class: \"next-btn\"\n  }, \"다음\")])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","style","_normalizeStyle","width","$data","slideWidth","_createVNode","_TransitionGroup","name","tag","default","_withCtx","_Fragment","_renderList","images","image","index","key","_normalizeClass","currentIndex","src","alt","_hoisted_4","_","onClick","_cache","args","$options","prevSlide","nextSlide"],"sources":["C:\\Users\\boo\\icns\\shop\\front-end\\src\\pages\\Test.vue"],"sourcesContent":["<template>\r\n    <div class=\"test-page\">\r\n      <h1>테스트 페이지</h1>\r\n      <div class=\"banner\">\r\n        <div class=\"slider\" :style=\"{ width: slideWidth + 'px' }\">\r\n          <transition-group name=\"slide\" tag=\"div\">\r\n            <div :key=\"index\" v-for=\"(image, index) in images\" class=\"slide\" :class=\"{ 'active': index === currentIndex }\">\r\n              <img :src=\"image\" :alt=\"'slide-' + index\" class=\"slide-image\">\r\n            </div>\r\n          </transition-group>\r\n        </div>\r\n        <button @click=\"prevSlide\" class=\"prev-btn\">이전</button>\r\n        <button @click=\"nextSlide\" class=\"next-btn\">다음</button>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: \"Test\",\r\n    data() {\r\n      return {\r\n        images: [\r\n          '/slide/slide1.jpg',\r\n          '/slide/slide2.jpg',\r\n          '/slide/slide3.jpg',\r\n          '/slide/slide4.jpg'\r\n        ],\r\n        currentIndex: 0,\r\n        slideWidth: 0\r\n      };\r\n    },\r\n    mounted() {\r\n      // 컴포넌트가 마운트된 후에 슬라이드의 너비 설정\r\n      this.setSlideWidth();\r\n      // 윈도우 크기 변경 시 슬라이드의 너비 다시 설정\r\n      window.addEventListener('resize', this.setSlideWidth);\r\n    },\r\n    beforeDestroy() {\r\n      // 컴포넌트가 파괴되기 전에 이벤트 리스너 제거\r\n      window.removeEventListener('resize', this.setSlideWidth);\r\n    },\r\n    methods: {\r\n      prevSlide() {\r\n        this.currentIndex = (this.currentIndex - 1 + this.images.length) % this.images.length;\r\n      },\r\n      nextSlide() {\r\n        this.currentIndex = (this.currentIndex + 1) % this.images.length;\r\n      },\r\n      setSlideWidth() {\r\n        // 슬라이드의 너비 설정\r\n        this.slideWidth = this.$el.offsetWidth;\r\n      }\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  .banner {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 300px; /* 이미지 높이에 맞게 조절하세요 */\r\n  }\r\n  \r\n  .slider {\r\n    overflow: hidden;\r\n    position: relative;\r\n  }\r\n  \r\n  .slide {\r\n    display: inline-block;\r\n    width: 100%;\r\n    transition: transform 0.5s ease;\r\n  }\r\n  \r\n  .slide-image {\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n  \r\n  .prev-btn,\r\n  .next-btn {\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    padding: 10px;\r\n    border: none;\r\n    background-color: transparent;\r\n    color: white;\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .prev-btn {\r\n    left: 10px;\r\n  }\r\n  \r\n  .next-btn {\r\n    right: 10px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAW;gCACpBC,mBAAA,CAAgB,YAAZ,SAAO;;EACND,KAAK,EAAC;AAAQ;mBAHzB;;uBACIE,mBAAA,CAaM,OAbNC,UAaM,GAZJC,UAAgB,EAChBH,mBAAA,CAUM,OAVNI,UAUM,GATJJ,mBAAA,CAMM;IANDD,KAAK,EAAC,QAAQ;IAAEM,KAAK,EAJlCC,eAAA;MAAAC,KAAA,EAI6CC,KAAA,CAAAC,UAAU;IAAA;MAC7CC,YAAA,CAImBC,gBAAA;IAJDC,IAAI,EAAC,OAAO;IAACC,GAAG,EAAC;;IAL7CC,OAAA,EAAAC,QAAA,CAM8B,MAAgC,E,kBAAlDd,mBAAA,CAEMe,SAAA,QARlBC,WAAA,CAMuDT,KAAA,CAAAU,MAAM,EAN7D,CAMsCC,KAAK,EAAEC,KAAK;2BAAtCnB,mBAAA,CAEM;QAFAoB,GAAG,EAAED,KAAK;QAAmCrB,KAAK,EANpEuB,eAAA,EAMqE,OAAO;UAAA,UAAqBF,KAAK,KAAKZ,KAAA,CAAAe;QAAY;UACzGvB,mBAAA,CAA8D;QAAxDwB,GAAG,EAAEL,KAAK;QAAGM,GAAG,aAAaL,KAAK;QAAErB,KAAK,EAAC;8BAP9D2B,UAAA,E;;IAAAC,CAAA;uBAWQ3B,mBAAA,CAAuD;IAA9C4B,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;IAAE/B,KAAK,EAAC;KAAW,IAAE,GAC9CC,mBAAA,CAAuD;IAA9C4B,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAE,SAAA,IAAAF,QAAA,CAAAE,SAAA,IAAAH,IAAA,CAAS;IAAE/B,KAAK,EAAC;KAAW,IAAE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}